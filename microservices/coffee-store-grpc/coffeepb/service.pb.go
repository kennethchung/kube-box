// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package kubebox_coffeepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CoffeeItem struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price                string   `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	Calories             int32    `protobuf:"varint,3,opt,name=calories,proto3" json:"calories,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoffeeItem) Reset()         { *m = CoffeeItem{} }
func (m *CoffeeItem) String() string { return proto.CompactTextString(m) }
func (*CoffeeItem) ProtoMessage()    {}
func (*CoffeeItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *CoffeeItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoffeeItem.Unmarshal(m, b)
}
func (m *CoffeeItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoffeeItem.Marshal(b, m, deterministic)
}
func (m *CoffeeItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoffeeItem.Merge(m, src)
}
func (m *CoffeeItem) XXX_Size() int {
	return xxx_messageInfo_CoffeeItem.Size(m)
}
func (m *CoffeeItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CoffeeItem.DiscardUnknown(m)
}

var xxx_messageInfo_CoffeeItem proto.InternalMessageInfo

func (m *CoffeeItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CoffeeItem) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *CoffeeItem) GetCalories() int32 {
	if m != nil {
		return m.Calories
	}
	return 0
}

type CoffeeMenuItems struct {
	Items                []*CoffeeItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CoffeeMenuItems) Reset()         { *m = CoffeeMenuItems{} }
func (m *CoffeeMenuItems) String() string { return proto.CompactTextString(m) }
func (*CoffeeMenuItems) ProtoMessage()    {}
func (*CoffeeMenuItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *CoffeeMenuItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoffeeMenuItems.Unmarshal(m, b)
}
func (m *CoffeeMenuItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoffeeMenuItems.Marshal(b, m, deterministic)
}
func (m *CoffeeMenuItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoffeeMenuItems.Merge(m, src)
}
func (m *CoffeeMenuItems) XXX_Size() int {
	return xxx_messageInfo_CoffeeMenuItems.Size(m)
}
func (m *CoffeeMenuItems) XXX_DiscardUnknown() {
	xxx_messageInfo_CoffeeMenuItems.DiscardUnknown(m)
}

var xxx_messageInfo_CoffeeMenuItems proto.InternalMessageInfo

func (m *CoffeeMenuItems) GetItems() []*CoffeeItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type CoffeeMenuRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoffeeMenuRequest) Reset()         { *m = CoffeeMenuRequest{} }
func (m *CoffeeMenuRequest) String() string { return proto.CompactTextString(m) }
func (*CoffeeMenuRequest) ProtoMessage()    {}
func (*CoffeeMenuRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *CoffeeMenuRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoffeeMenuRequest.Unmarshal(m, b)
}
func (m *CoffeeMenuRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoffeeMenuRequest.Marshal(b, m, deterministic)
}
func (m *CoffeeMenuRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoffeeMenuRequest.Merge(m, src)
}
func (m *CoffeeMenuRequest) XXX_Size() int {
	return xxx_messageInfo_CoffeeMenuRequest.Size(m)
}
func (m *CoffeeMenuRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CoffeeMenuRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CoffeeMenuRequest proto.InternalMessageInfo

type CoffeeOrder struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size                 string   `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Quantity             int32    `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoffeeOrder) Reset()         { *m = CoffeeOrder{} }
func (m *CoffeeOrder) String() string { return proto.CompactTextString(m) }
func (*CoffeeOrder) ProtoMessage()    {}
func (*CoffeeOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *CoffeeOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoffeeOrder.Unmarshal(m, b)
}
func (m *CoffeeOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoffeeOrder.Marshal(b, m, deterministic)
}
func (m *CoffeeOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoffeeOrder.Merge(m, src)
}
func (m *CoffeeOrder) XXX_Size() int {
	return xxx_messageInfo_CoffeeOrder.Size(m)
}
func (m *CoffeeOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_CoffeeOrder.DiscardUnknown(m)
}

var xxx_messageInfo_CoffeeOrder proto.InternalMessageInfo

func (m *CoffeeOrder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CoffeeOrder) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *CoffeeOrder) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type CoffeeResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoffeeResponse) Reset()         { *m = CoffeeResponse{} }
func (m *CoffeeResponse) String() string { return proto.CompactTextString(m) }
func (*CoffeeResponse) ProtoMessage()    {}
func (*CoffeeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *CoffeeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoffeeResponse.Unmarshal(m, b)
}
func (m *CoffeeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoffeeResponse.Marshal(b, m, deterministic)
}
func (m *CoffeeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoffeeResponse.Merge(m, src)
}
func (m *CoffeeResponse) XXX_Size() int {
	return xxx_messageInfo_CoffeeResponse.Size(m)
}
func (m *CoffeeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoffeeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoffeeResponse proto.InternalMessageInfo

func (m *CoffeeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CoffeeResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*CoffeeItem)(nil), "kubebox.coffeepb.CoffeeItem")
	proto.RegisterType((*CoffeeMenuItems)(nil), "kubebox.coffeepb.CoffeeMenuItems")
	proto.RegisterType((*CoffeeMenuRequest)(nil), "kubebox.coffeepb.CoffeeMenuRequest")
	proto.RegisterType((*CoffeeOrder)(nil), "kubebox.coffeepb.CoffeeOrder")
	proto.RegisterType((*CoffeeResponse)(nil), "kubebox.coffeepb.CoffeeResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4d, 0x4e, 0xc3, 0x30,
	0x10, 0x85, 0x95, 0xb6, 0x29, 0x30, 0xa5, 0xfc, 0x0c, 0x08, 0x45, 0x51, 0x91, 0x42, 0xd8, 0x74,
	0x95, 0x88, 0x72, 0x03, 0x10, 0x42, 0x2c, 0x10, 0x22, 0x9c, 0xc0, 0x09, 0xd3, 0xca, 0x6a, 0x6b,
	0xa7, 0xb1, 0x53, 0x01, 0x4b, 0xae, 0xc0, 0xd1, 0xb8, 0x00, 0x0b, 0x0e, 0x82, 0x6a, 0x63, 0x5a,
	0x21, 0xca, 0x6e, 0xde, 0xe4, 0xe9, 0x9b, 0x37, 0x13, 0x43, 0x57, 0x51, 0x35, 0xe7, 0x05, 0x25,
	0x65, 0x25, 0xb5, 0xc4, 0xbd, 0x71, 0x9d, 0x53, 0x2e, 0x9f, 0x92, 0x42, 0x0e, 0x87, 0x44, 0x65,
	0x1e, 0xf6, 0x46, 0x52, 0x8e, 0x26, 0x94, 0xb2, 0x92, 0xa7, 0x4c, 0x08, 0xa9, 0x99, 0xe6, 0x52,
	0x28, 0xeb, 0x8f, 0x33, 0x80, 0x4b, 0xe3, 0xbc, 0xd1, 0x34, 0x45, 0x84, 0x96, 0x60, 0x53, 0x0a,
	0xbc, 0xc8, 0xeb, 0x6f, 0x65, 0xa6, 0xc6, 0x43, 0xf0, 0xcb, 0x8a, 0x17, 0x14, 0x34, 0x4c, 0xd3,
	0x0a, 0x0c, 0x61, 0xb3, 0x60, 0x13, 0x59, 0x71, 0x52, 0x41, 0x33, 0xf2, 0xfa, 0x7e, 0xf6, 0xa3,
	0xe3, 0x2b, 0xd8, 0xb5, 0xcc, 0x5b, 0x12, 0xf5, 0x82, 0xab, 0x70, 0x00, 0x3e, 0x5f, 0x14, 0x81,
	0x17, 0x35, 0xfb, 0x9d, 0x41, 0x2f, 0xf9, 0x1d, 0x33, 0x59, 0xa6, 0xc8, 0xac, 0x35, 0x3e, 0x80,
	0xfd, 0x25, 0x26, 0xa3, 0x59, 0x4d, 0x4a, 0xc7, 0xf7, 0xd0, 0xb1, 0xcd, 0xbb, 0xea, 0x91, 0xaa,
	0x3f, 0x03, 0x23, 0xb4, 0x14, 0x7f, 0x71, 0x79, 0x4d, 0xbd, 0x88, 0x3b, 0xab, 0x99, 0xd0, 0x5c,
	0x3f, 0xbb, 0xb8, 0x4e, 0xc7, 0x17, 0xb0, 0x63, 0x91, 0x19, 0xa9, 0x52, 0x0a, 0x45, 0x18, 0xc0,
	0xc6, 0x94, 0x94, 0x62, 0x23, 0x07, 0x76, 0x12, 0x8f, 0xa0, 0xad, 0x34, 0xd3, 0xb5, 0x32, 0x74,
	0x3f, 0xfb, 0x56, 0x83, 0x0f, 0x0f, 0xba, 0x16, 0xf2, 0x60, 0x7f, 0x07, 0x8e, 0xa1, 0x7b, 0x4d,
	0x7a, 0xb9, 0x00, 0x9e, 0xae, 0xdb, 0x79, 0x65, 0xbd, 0xf0, 0xe4, 0x3f, 0x93, 0x39, 0x65, 0x8c,
	0xaf, 0xef, 0x9f, 0x6f, 0x8d, 0x6d, 0x84, 0x74, 0x7e, 0x96, 0x5a, 0x17, 0xe6, 0xd0, 0x31, 0xf7,
	0xb0, 0x5e, 0x3c, 0x5e, 0x47, 0x31, 0xa6, 0x30, 0x5a, 0xf7, 0xd9, 0x1d, 0xc0, 0xcd, 0x08, 0x57,
	0x66, 0xe4, 0x6d, 0xf3, 0x60, 0xce, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x31, 0x97, 0xd6, 0x75,
	0x71, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoffeeServiceClient is the client API for CoffeeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoffeeServiceClient interface {
	GetCoffeeMenu(ctx context.Context, in *CoffeeMenuRequest, opts ...grpc.CallOption) (*CoffeeMenuItems, error)
	OrderCoffee(ctx context.Context, in *CoffeeOrder, opts ...grpc.CallOption) (*CoffeeResponse, error)
}

type coffeeServiceClient struct {
	cc *grpc.ClientConn
}

func NewCoffeeServiceClient(cc *grpc.ClientConn) CoffeeServiceClient {
	return &coffeeServiceClient{cc}
}

func (c *coffeeServiceClient) GetCoffeeMenu(ctx context.Context, in *CoffeeMenuRequest, opts ...grpc.CallOption) (*CoffeeMenuItems, error) {
	out := new(CoffeeMenuItems)
	err := c.cc.Invoke(ctx, "/kubebox.coffeepb.CoffeeService/GetCoffeeMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coffeeServiceClient) OrderCoffee(ctx context.Context, in *CoffeeOrder, opts ...grpc.CallOption) (*CoffeeResponse, error) {
	out := new(CoffeeResponse)
	err := c.cc.Invoke(ctx, "/kubebox.coffeepb.CoffeeService/OrderCoffee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoffeeServiceServer is the server API for CoffeeService service.
type CoffeeServiceServer interface {
	GetCoffeeMenu(context.Context, *CoffeeMenuRequest) (*CoffeeMenuItems, error)
	OrderCoffee(context.Context, *CoffeeOrder) (*CoffeeResponse, error)
}

// UnimplementedCoffeeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCoffeeServiceServer struct {
}

func (*UnimplementedCoffeeServiceServer) GetCoffeeMenu(ctx context.Context, req *CoffeeMenuRequest) (*CoffeeMenuItems, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCoffeeMenu not implemented")
}
func (*UnimplementedCoffeeServiceServer) OrderCoffee(ctx context.Context, req *CoffeeOrder) (*CoffeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderCoffee not implemented")
}

func RegisterCoffeeServiceServer(s *grpc.Server, srv CoffeeServiceServer) {
	s.RegisterService(&_CoffeeService_serviceDesc, srv)
}

func _CoffeeService_GetCoffeeMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoffeeMenuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoffeeServiceServer).GetCoffeeMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubebox.coffeepb.CoffeeService/GetCoffeeMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoffeeServiceServer).GetCoffeeMenu(ctx, req.(*CoffeeMenuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoffeeService_OrderCoffee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoffeeOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoffeeServiceServer).OrderCoffee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubebox.coffeepb.CoffeeService/OrderCoffee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoffeeServiceServer).OrderCoffee(ctx, req.(*CoffeeOrder))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoffeeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kubebox.coffeepb.CoffeeService",
	HandlerType: (*CoffeeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCoffeeMenu",
			Handler:    _CoffeeService_GetCoffeeMenu_Handler,
		},
		{
			MethodName: "OrderCoffee",
			Handler:    _CoffeeService_OrderCoffee_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
